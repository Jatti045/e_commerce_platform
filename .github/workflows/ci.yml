name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Client-side tests and build
  client-ci:
    name: Client CI
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: Install client dependencies
        run: |
          cd client
          npm ci

      - name: Run client linting
        run: |
          cd client
          npm run lint

      - name: Run client tests
        run: |
          cd client
          npm run test:coverage

      - name: Upload client test coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./client/coverage/lcov.info
          flags: client
          name: client-coverage

      - name: Build client
        run: |
          cd client
          npm run build

      - name: Upload client build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: client-build-${{ matrix.node-version }}
          path: client/dist/
          retention-days: 7

  # Server-side tests and build
  server-ci:
    name: Server CI
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: server/package-lock.json

      - name: Install server dependencies
        run: |
          cd server
          npm ci

      - name: Run server tests
        env:
          NODE_ENV: test
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-secret
          MONGODB_URI: mongodb://localhost:27017/test
        run: |
          cd server
          npm test

      - name: Upload server test coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./server/coverage/lcov.info
          flags: server
          name: server-coverage

  # Docker build test
  docker-ci:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [client-ci, server-ci]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build client Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          push: false
          tags: billify-client:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build server Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          push: false
          tags: billify-server:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker Compose
        run: |
          docker compose -f docker-compose.yml config

  # Integration tests
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [client-ci, server-ci]

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mongodb:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: |
          cd server && npm ci
          cd ../client && npm ci

      - name: Start server
        env:
          NODE_ENV: test
          PORT: 5000
          REDIS_URL: redis://localhost:6379
          MONGODB_URI: mongodb://localhost:27017/test
          JWT_SECRET: test-secret
        run: |
          cd server
          npm start &
          sleep 10

      - name: Build client
        env:
          VITE_API_URL: http://localhost:5000/api
        run: |
          cd client
          npm run build

      - name: Run integration tests
        run: |
          # Add your integration test commands here
          echo "Integration tests would run here"
          # Example: newman run postman-collection.json --environment test.env
